<!--
Copyright (c) 2018 - 2024 Daniel Lascelles, https://github.com/dlascelles
This code is licensed under The MIT License. See LICENSE file in the project root for full license information.
License URL: https://github.com/dlascelles/Arithmos/blob/master/LICENSE
-->
<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:vm="clr-namespace:ArithmosApp.ViewModels"
             mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="485"
             x:Class="ArithmosApp.Views.MainView">
    <TabControl TabStripPlacement="Left" SelectedIndex="1" FontSize="12">
        <TabItem Header="Calculator" FontWeight="Bold" Margin="2,5,0,5" FontSize="16" Padding="0">
            <Grid Margin="0,5">
                <Grid.DataContext>
                    <vm:CalculatorViewModel />
                </Grid.DataContext>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="40"></RowDefinition>
                    <RowDefinition Height="140*" MaxHeight="300"></RowDefinition>
                    <RowDefinition Height="200*"></RowDefinition>
                </Grid.RowDefinitions>
                <Border IsEnabled="{Binding !IsBusy}" Grid.Row="0" BorderThickness="0,0,0,2" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" HorizontalAlignment="Stretch" Height="30" MaxWidth="500">
                    <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding CurrentPhraseContent}" MaxLength="1000" MaxLines="1" Watermark="Type something..." BorderThickness="0" HorizontalContentAlignment="Center" HorizontalAlignment="Stretch" FontSize="14" Background="Transparent">
                        <TextBox.Styles>
                            <Style Selector="TextBox:focus /template/ Border#PART_BorderElement">
                                <Setter Property="BorderThickness" Value="0" />
                            </Style>
                        </TextBox.Styles>
                    </TextBox>
                </Border>
                <StackPanel IsEnabled="{Binding !IsBusy}" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Command="{Binding SearchByCurrentPhraseCommand}" Content="Search database" ToolTip.Tip="Search the database for phrases that have the same values for the selected methods" Margin="0,0,10,0"></Button>
                    <Button Command="{Binding SaveCurrentPhraseCommand}" Content="Save phrase" ToolTip.Tip="Save the current phrase to the database"></Button>
                </StackPanel>
                <ScrollViewer IsEnabled="{Binding !IsBusy}" Grid.Row="2" ScrollViewer.VerticalScrollBarVisibility="Auto" Margin="5">
                    <ItemsControl HorizontalAlignment="Center" ItemsSource="{Binding GematriaMethodsViewModels}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border BorderThickness="1" CornerRadius="3" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" Margin="15" MinWidth="150" MaxWidth="150">
                                    <ToggleButton ClickMode="Release" HorizontalAlignment="Stretch" Cursor="Hand" IsChecked="{Binding IsSelected}">
                                        <ToggleButton.Content>
                                            <StackPanel Orientation="Vertical" ToolTip.Tip="{Binding Name}">
                                                <TextBlock Text="{Binding Name}" TextAlignment="Center" TextTrimming="CharacterEllipsis"></TextBlock>
                                                <TextBlock Text="{Binding Value}" TextAlignment="Center"></TextBlock>
                                            </StackPanel>
                                        </ToggleButton.Content>
                                    </ToggleButton>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
                <Grid IsEnabled="{Binding !IsBusy}" Grid.Row="3" Margin="10,0" RowDefinitions="20,65*">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="500"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" FontSize="14" FontWeight="Bold" Text="{Binding ResultsGridCountLabel}" Margin="5,0,0,5"></TextBlock>
                    <Border Grid.Column="0" Grid.Row="1" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3" Margin="5,0,0,0">
                        <Grid RowDefinitions="60*,35" ColumnDefinitions="50*,50*">
                            <TreeDataGrid Name="CalculatorGrid" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Source="{Binding CalculatorGridSource}" ShowColumnHeaders="True" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" />
                            <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Stretch">
                                <Button Content="Clear" Command="{Binding ClearAllResultsCommand}" ToolTip.Tip="Clear all grid contents" Margin="5,0,0,0"></Button>
                                <Button Content="Copy" Command="{Binding CopyCommand}" ToolTip.Tip="Copy selected phrases to the clipboard" Margin="5,0,0,0"></Button>
                                <Button Content="Copy in CSV" Command="{Binding CopyCSVCommand}" ToolTip.Tip="Copy selected phrases and their values to the clipboard" Margin="5,0,0,0"></Button>
                                <Button Content="Export Grid" Command="{Binding ExportGridCommand}" ToolTip.Tip="Export all phrases and their values to a CSV file at the app's executable location" Margin="5,0,0,0"></Button>
                            </StackPanel>
                            <Button Grid.Column="1" Grid.Row="1" Content="Delete Selected" Command="{Binding DeleteSelectedCommand}" ToolTip.Tip="Delete all selected phrases from the database" Margin="0,0,5,0" HorizontalAlignment="Right" Foreground="Red"></Button>
                        </Grid>
                    </Border>
                </Grid>
                <Panel Grid.Row="3" IsVisible="{Binding IsBusy}" ZIndex="9999" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <ProgressBar Background="{DynamicResource ResourceKey=ArithmosProgressBackground}" IsIndeterminate="True" ShowProgressText="True" ProgressTextFormat="{Binding BusyMessage}" Width="300" Height="25"></ProgressBar>
                    <Button Content="Cancel" Command="{Binding CancelOperationCommand}" HorizontalAlignment="Center" Margin="0,70,0,0"></Button>
                </Panel>
            </Grid>
        </TabItem>
        <TabItem Header="Scanner" FontWeight="Bold" Margin="2,5,0,5" FontSize="16" Padding="0">
            <Grid RowDefinitions="Auto,*">
                <Grid.DataContext>
                    <vm:ScannerViewModel />
                </Grid.DataContext>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MinWidth="100"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Expander Grid.Column="0" Background="Transparent" Grid.Row="0" MinHeight="30" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Padding="0" IsExpanded="True">
                    <Expander.Styles>
                        <Style Selector="Expander /template/ ToggleButton#ExpanderHeader">
                            <Setter Property="Padding" Value="5,0,0,0" />
                        </Style>
                    </Expander.Styles>
                    <Expander.Header>
                        <TextBlock Padding="0" FontSize="14" FontWeight="Bold">Scanner</TextBlock>
                    </Expander.Header>
                    <Grid Margin="5" IsEnabled="{Binding !IsBusy}" RowDefinitions="20,35,200">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="140"></ColumnDefinition>
                            <ColumnDefinition Width="120"></ColumnDefinition>
                            <ColumnDefinition Width="180"></ColumnDefinition>
                            <ColumnDefinition Width="130"></ColumnDefinition>
                            <ColumnDefinition Width="*" MinWidth="270"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" FontWeight="DemiBold">Values to look for</TextBlock>
                        <Border Grid.Column="0" Grid.Row="1" IsEnabled="{Binding !GetAllText}" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" VerticalAlignment="Top" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" Height="35">
                            <StackPanel Orientation="Horizontal">
                                <NumericUpDown Width="60" Minimum="1" Maximum="999999" Value="{Binding ValueToLookFor}" FontSize="12" FormatString="0" ShowButtonSpinner="False" BorderThickness="0" VerticalContentAlignment="Center" Height="35">
                                    <NumericUpDown.KeyBindings>
                                        <KeyBinding Command="{Binding AddValueToLookForCommand}" Gesture="Enter" />
                                    </NumericUpDown.KeyBindings>
                                </NumericUpDown>
                                <Button Content="Add" Command="{Binding AddValueToLookForCommand}" Height="35" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="40" Padding="0"></Button>
                                <Button Content="Clear" Command="{Binding ClearValuesToLookForCommand}" Height="35" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="40" Padding="0"></Button>
                            </StackPanel>
                        </Border>
                        <Border Grid.Column="0" Grid.Row="2" IsEnabled="{Binding !GetAllText}" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" BorderThickness="1" CornerRadius="0,0,3,3" VerticalAlignment="Stretch" Height="200">
                            <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto" Margin="0,5">
                                <ItemsControl x:Name="ScannerValuesItemsControl" ItemsSource="{Binding ValuesToLookFor}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" Margin="6,0" Height="35">
                                                <Button Content="X" FontWeight="Bold" Foreground="Red" Command="{Binding ElementName=ScannerValuesItemsControl, Path=DataContext.RemoveValueToLookForCommand}" CommandParameter="{Binding}"></Button>
                                                <TextBlock Text="{Binding}" VerticalAlignment="Center" Padding="5" Width="100" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </Border>
                        <TextBlock Grid.Row="0" Grid.Column="1" FontWeight="DemiBold" Margin="5,0,0,0">Methods to use</TextBlock>
                        <Border Grid.Column="1" Grid.Row="1" IsEnabled="{Binding !GetAllText}" Grid.RowSpan="2" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" BorderThickness="1" CornerRadius="3" Margin="5,0,0,0">
                            <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <ItemsControl ItemsSource="{Binding GematriaMethodsViewModels}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsSelected}" Content="{Binding Name}" FontSize="12" MaxHeight="30" TextBlock.TextTrimming="CharacterEllipsis" ToolTip.Tip="{Binding Name}" Margin="5,-3,0,-3" Padding="5,0"></CheckBox>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </Border>
                        <TextBlock Grid.Row="0" Grid.Column="2" FontWeight="DemiBold" Margin="5,0,0,0">Phrase options</TextBlock>
                        <Border Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3" Margin="5,0,0,0">
                            <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto" Margin="0,5">
                                <StackPanel Orientation="Vertical" Margin="6,0">
                                    <TextBlock Text="Min. characters per phrase" HorizontalAlignment="Center"></TextBlock>
                                    <TextBlock Text="{Binding #MinCharsSlider.Value, StringFormat=0}" HorizontalAlignment="Center" Margin="0,3,0,0"></TextBlock>
                                    <Slider x:Name="MinCharsSlider" Minimum="1" Maximum="30" SmallChange="1" LargeChange="1" TickFrequency="1" Value="{Binding MinimumCharactersPerPhrase}" Margin="10,-15,10,-5"></Slider>
                                    <TextBlock Text="Min. words per phrase" HorizontalAlignment="Center"></TextBlock>
                                    <TextBlock Text="{Binding #MinWordsSlider.Value, StringFormat=0}" HorizontalAlignment="Center" Margin="0,3,0,0"></TextBlock>
                                    <Slider x:Name="MinWordsSlider" Minimum="1" Maximum="{Binding #MaxWordsSlider.Value, StringFormat=0}" SmallChange="1" LargeChange="1" TickFrequency="1" Value="{Binding MinimumWordsPerPhrase}" Margin="10,-15,10,-5"></Slider>
                                    <TextBlock Text="Max. words per phrase" HorizontalAlignment="Center"></TextBlock>
                                    <TextBlock Text="{Binding #MaxWordsSlider.Value, StringFormat=0}" HorizontalAlignment="Center" Margin="0,3,0,0"></TextBlock>
                                    <Slider x:Name="MaxWordsSlider" Minimum="1" Maximum="30" SmallChange="1" LargeChange="1" TickFrequency="1" Value="{Binding MaximumWordsPerPhrase}" Margin="10,-15,10,-5"></Slider>
                                    <CheckBox Content="Get all text" IsChecked="{Binding GetAllText}" ToolTip.Tip="Will ignore any values and selected methods and retrieve all text" Margin="10,-4" FontSize="12"></CheckBox>
                                </StackPanel>
                            </ScrollViewer>
                        </Border>
                        <TextBlock Grid.Row="0" Grid.Column="3" FontWeight="DemiBold" Margin="5,0,0,0">Phrase separators</TextBlock>
                        <Border Grid.Column="3" Grid.Row="1" Grid.RowSpan="2" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3" Margin="5,0,0,0">
                            <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto" Margin="0,5">
                                <StackPanel Orientation="Vertical" Margin="6,0">
                                    <CheckBox IsChecked="{Binding NewLine}" Content="New Line" Margin="0,-4" FontSize="12"></CheckBox>
                                    <CheckBox IsChecked="{Binding Comma}" Content="Comma" Margin="0,-4" FontSize="12"></CheckBox>
                                    <CheckBox IsChecked="{Binding Semicolon}" Content="Semicolon" Margin="0,-4" FontSize="12"></CheckBox>
                                    <CheckBox IsChecked="{Binding GreekSemicolon}" Content="Gr. Semicolon" Margin="0,-4" FontSize="12"></CheckBox>
                                    <CheckBox IsChecked="{Binding Tab}" Content="Tab" Margin="0,-4" FontSize="12"></CheckBox>
                                    <CheckBox IsChecked="{Binding Colon}" Content="Colon" Margin="0,-4" FontSize="12"></CheckBox>
                                    <CheckBox IsChecked="{Binding FullStop}" Content="Full stop" Margin="0,-4" FontSize="12"></CheckBox>
                                    <CheckBox IsChecked="{Binding Pipe}" Content="Pipe" Margin="0,-4" FontSize="12"></CheckBox>
                                    <CheckBox IsChecked="{Binding Space}" Content="Space" Margin="0,-4" FontSize="12"></CheckBox>
                                </StackPanel>
                            </ScrollViewer>
                        </Border>
                        <TextBlock Grid.Row="0" Grid.Column="4" FontWeight="DemiBold" Margin="5,0,0,0">Scanner options</TextBlock>
                        <Border Grid.Column="4" Grid.Row="1" Grid.RowSpan="2" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3" Margin="5,0,0,0">
                            <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto" Margin="0,5">
                                <Grid RowDefinitions="30,100*,30,30" ColumnDefinitions="30,100*,65" Margin="6,0">
                                    <RadioButton Grid.Column="0" Grid.Row="0" IsChecked="{Binding FileSource}" ToolTip.Tip="Use a text file as the scan source"></RadioButton>
                                    <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding FilePathToScan}" IsEnabled="{Binding FileSource}" FontSize="12" HorizontalAlignment="Stretch" VerticalContentAlignment="Center" Height="30"></TextBox>
                                    <Button Grid.Column="2" Grid.Row="0" Content="Browse..." Command="{Binding GetFilePathCommand}" IsEnabled="{Binding FileSource}" Height="30" VerticalContentAlignment="Center" Margin="-1,0,0,0" HorizontalAlignment="Stretch"></Button>
                                    <RadioButton Grid.Column="0" Grid.Row="1" IsChecked="{Binding TextSource}" ToolTip.Tip="Insert text to be scanned"></RadioButton>
                                    <TextBox Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" Text="{Binding TextToScan}" IsEnabled="{Binding TextSource}" AcceptsReturn="True" MinHeight="60" MaxHeight="120" FontSize="12" HorizontalAlignment="Stretch" Margin="0,5"></TextBox>
                                    <StackPanel Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" Orientation="Horizontal" Margin="0">
                                        <CheckBox IsChecked="{Binding OutputToGrid}" Content="Show on grid" Margin="0" FontSize="12"></CheckBox>
                                        <CheckBox IsChecked="{Binding OutputToFile}" Content="Export to file" Margin="10,0,0,0" FontSize="12"></CheckBox>
                                    </StackPanel>
                                    <Button Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="3" Content="Scan" Command="{Binding ScanCommand}" FontSize="14" HorizontalContentAlignment="Center" HorizontalAlignment="Stretch"></Button>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </Expander>
                <Grid Grid.Column="0" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50*" MinHeight="150"></RowDefinition>
                        <RowDefinition Height="50*" MinHeight="150"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid Grid.Column="0" Grid.Row="0" IsEnabled="{Binding !IsBusy}" Margin="5,0,0,0" RowDefinitions="30,100*,35">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="850"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" FontWeight="Bold" FontSize="14" Padding="0,5" Text="{Binding ResultsGridCountLabel}"></TextBlock>
                        <TreeDataGrid Name="ResultsGrid" Grid.Row="1" Source="{Binding ResultsGridSource}" ShowColumnHeaders="True" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}">
                            <!--<i:Interaction.Behaviors>
								<ia:EventTriggerBehavior EventName="DoubleTapped">
									<InvokeCommandAction Command="{Binding MoveResultsCommand}"/>
								</ia:EventTriggerBehavior>
							</i:Interaction.Behaviors>-->
                        </TreeDataGrid>
                        <Border Grid.Row="2" BorderThickness="1" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" CornerRadius="0,0,3,3">
                            <StackPanel Orientation="Horizontal">
                                <Button Content="Clear" Command="{Binding ClearAllResultsCommand}" ToolTip.Tip="Clear all grid contents" Margin="5,0,0,0"></Button>
                                <Button Content="Copy" Command="{Binding CopyResultsCommand}" ToolTip.Tip="Copy selected phrases to the clipboard" Margin="5,0,0,0"></Button>
                                <Button Content="Copy in CSV" Command="{Binding CopyResultsCSVCommand}" ToolTip.Tip="Copy selected phrases and their values to the clipboard" Margin="5,0,0,0"></Button>
                                <Button Content="Export Grid" Command="{Binding ExportResultsGridCommand}" ToolTip.Tip="Export all phrases and their values to a CSV file at the app's executable location" Margin="5,0,5,0"></Button>
                                <Button Content=">" FontWeight="Bold" ToolTip.Tip="Move selected to the grid below" Command="{Binding MoveResultsCommand}" Margin="0,0,5,0"></Button>
                                <Button Content=">>" FontWeight="Bold" ToolTip.Tip="Move everything to the grid below" Command="{Binding MoveAllResultsCommand}"></Button>
                            </StackPanel>
                        </Border>
                    </Grid>
                    <Grid Grid.Column="0" Grid.Row="1" IsEnabled="{Binding !IsBusy}" Margin="5,0,0,5" RowDefinitions="30,100*,35">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="850"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" FontWeight="Bold" Padding="0,5" FontSize="14" Text="{Binding SelectionsGridCountLabel}"></TextBlock>
                        <TreeDataGrid x:Name="SelectionGrid" Grid.Row="1" Source="{Binding SelectionsGridSource}" ShowColumnHeaders="True" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}">
                            <!--<i:Interaction.Behaviors>
								<ia:EventTriggerBehavior EventName="DoubleTapped" SourceObject="SelectionGrid">
									<InvokeCommandAction Command="{Binding MoveSelectionsCommand}"/>
								</ia:EventTriggerBehavior>
							</i:Interaction.Behaviors>-->
                        </TreeDataGrid>
                        <Border Grid.Row="2" BorderThickness="1" CornerRadius="0,0,3,3" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}">
                            <StackPanel Orientation="Horizontal">
                                <Button Content="Clear" Command="{Binding ClearAllSelectionsCommand}" ToolTip.Tip="Clear all grid contents" Margin="5,0,0,0"></Button>
                                <Button Content="Copy" Command="{Binding CopySelectionsCommand}" ToolTip.Tip="Copy selected phrases to the clipboard" Margin="5,0,0,0"></Button>
                                <Button Content="Copy in CSV" Command="{Binding CopySelectionsCSVCommand}" ToolTip.Tip="Copy selected phrases and their values to the clipboard" Margin="5,0,0,0"></Button>
                                <Button Content="Export Grid" Command="{Binding ExportSelectionsGridCommand}" ToolTip.Tip="Export all phrases and their values to a CSV file at the app's executable location" Margin="5,0,5,0"></Button>
                                <Button Content="&lt;" FontWeight="Bold" ToolTip.Tip="Move selected to the grid above" Command="{Binding MoveSelectionsCommand}" Margin="0,0,5,0"></Button>
                                <Button Content="&lt;&lt;" FontWeight="Bold" ToolTip.Tip="Move everything to the grid above" Command="{Binding MoveAllSelectionsCommand}" Margin="0,0,5,0"></Button>
                                <AutoCompleteBox x:Name="OperationDescription" ItemsSource="{Binding Operations}" FilterMode="Contains" Watermark="Select an existing operation or add a new one..." FontSize="12" VerticalAlignment="Center" Text="{Binding OperationDescription}" IsEnabled="{Binding Path=SelectionsGridSource.Items.Count}" Width="280" Height="24" Margin="0,0,5,0" Padding="3"></AutoCompleteBox>
                                <Button Content="Save" Command="{Binding SaveSelectionsCommand}" IsEnabled="{Binding ElementName=OperationDescription, Path=IsEnabled}"></Button>
                            </StackPanel>
                        </Border>
                    </Grid>
                    <Panel Grid.Row="0" IsVisible="{Binding IsBusy}" ZIndex="9999" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <ProgressBar Background="{DynamicResource ResourceKey=ArithmosProgressBackground}" IsIndeterminate="True" ShowProgressText="True" ProgressTextFormat="{Binding BusyMessage}" Width="300" Height="25"></ProgressBar>
                        <Button Content="Cancel" Command="{Binding CancelOperationCommand}" HorizontalAlignment="Center" Margin="0,70,0,0"></Button>
                    </Panel>
                </Grid>
            </Grid>
        </TabItem>
        <TabItem Header="Explorer" FontWeight="Bold" Margin="2,5,0,5" FontSize="16" Padding="0">
            <Grid>
                <Grid.DataContext>
                    <vm:ExplorerViewModel />
                </Grid.DataContext>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="25"></RowDefinition>
                    <RowDefinition Height="*" MinHeight="150"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="800"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Expander Grid.Column="0" Background="Transparent" Grid.Row="0" MinHeight="30" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Padding="0" IsExpanded="True">
                    <Expander.Styles>
                        <Style Selector="Expander /template/ ToggleButton#ExpanderHeader">
                            <Setter Property="Padding" Value="5,0,0,0" />
                        </Style>
                    </Expander.Styles>
                    <Expander.Header>
                        <TextBlock Padding="0" FontSize="14" FontWeight="Bold">Search</TextBlock>
                    </Expander.Header>
                    <Grid Margin="5" IsEnabled="{Binding !IsBusy}" RowDefinitions="20,35,200">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="140"></ColumnDefinition>
                            <ColumnDefinition Width="120"></ColumnDefinition>
                            <ColumnDefinition Width="250"></ColumnDefinition>
                            <ColumnDefinition Width="*" MinWidth="230"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" FontWeight="DemiBold">Values to look for</TextBlock>
                        <Border Grid.Column="0" Grid.Row="1" IsEnabled="{Binding SearchByValues}" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" Height="35" VerticalAlignment="Stretch">
                            <StackPanel Orientation="Horizontal">
                                <NumericUpDown Width="60" Minimum="1" Maximum="999999" Value="{Binding ValueToLookFor}" FormatString="0" ShowButtonSpinner="False" CornerRadius="3,3,0,0" FontSize="12" BorderThickness="0" VerticalContentAlignment="Center">
                                    <NumericUpDown.KeyBindings>
                                        <KeyBinding Command="{Binding AddValueToLookForCommand}" Gesture="Enter" />
                                    </NumericUpDown.KeyBindings>
                                </NumericUpDown>
                                <Button Content="Add" Command="{Binding AddValueToLookForCommand}" Height="35" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Padding="0" Width="40"></Button>
                                <Button Content="Clear" Command="{Binding ClearValuesToLookForCommand}" Height="35" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Padding="0" Width="40"></Button>
                            </StackPanel>
                        </Border>
                        <Border Grid.Column="0" Grid.Row="2" IsEnabled="{Binding SearchByValues}" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" Height="200" BorderThickness="1" CornerRadius="0,0,3,3">
                            <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <ItemsControl x:Name="ExplorerValuesItemsControl" ItemsSource="{Binding ValuesToLookFor}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" Margin="6,0" Height="35">
                                                <Button Content="X" FontWeight="Bold" Foreground="Red" Command="{Binding ElementName=ExplorerValuesItemsControl, Path=DataContext.RemoveValueToLookForCommand}" CommandParameter="{Binding}"></Button>
                                                <TextBlock Text="{Binding}" VerticalAlignment="Center" Padding="5" Width="100" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </Border>
                        <TextBlock Grid.Column="1" Grid.Row="0" FontWeight="DemiBold" Margin="5,0,0,0">Methods to use</TextBlock>
                        <Border Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" IsEnabled="{Binding SearchByValues}" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" BorderThickness="1" CornerRadius="3" Margin="5,0,0,0">
                            <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <ItemsControl ItemsSource="{Binding GematriaMethodsViewModels}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsSelected}" Content="{Binding Name}" FontSize="12" MaxHeight="30" TextBlock.TextTrimming="CharacterEllipsis" ToolTip.Tip="{Binding Name}" Margin="5,-3,0,-3" Padding="5,0"></CheckBox>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </Border>
                        <TextBlock Grid.Column="2" Grid.Row="0" FontWeight="DemiBold" Margin="5,0,0,0">Search database</TextBlock>
                        <Border Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" BorderThickness="1" CornerRadius="3" Margin="5,0,0,0">
                            <StackPanel Orientation="Vertical" VerticalAlignment="Stretch" Margin="5,0">
                                <RadioButton IsChecked="{Binding SearchByValues}" FontSize="12" Margin="5">Values</RadioButton>
                                <RadioButton IsChecked="{Binding SearchByText}" FontSize="12" Margin="5">Text</RadioButton>
                                <TextBox Text="{Binding TextToSearch}" IsEnabled="{Binding SearchByText}" Margin="2,0,0,25" Height="30" FontSize="12" VerticalContentAlignment="Center"></TextBox>
                                <StackPanel Orientation="Horizontal" Margin="6,22,0,0">
                                    <CheckBox IsChecked="{Binding OutputToGrid}" Content="Show on grid" FontSize="12"></CheckBox>
                                    <CheckBox IsChecked="{Binding OutputToFile}" Content="Export to file" FontSize="12" Margin="10,0,0,0"></CheckBox>
                                </StackPanel>
                                <Button Content="Search" Command="{Binding SearchCommand}" Margin="2,5,0,0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" FontSize="14"></Button>
                            </StackPanel>
                        </Border>
                        <TextBlock Grid.Column="3" Grid.Row="0" FontWeight="DemiBold" Margin="5,0,0,0">Operations</TextBlock>
                        <Border Grid.Column="3" Grid.Row="1" Grid.RowSpan="2" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" BorderThickness="1" CornerRadius="3" Margin="5,0,0,0">
                            <Grid RowDefinitions="50*,35" ColumnDefinitions="50,100,*">
                                <TreeDataGrid Name="OperationsGrid" Grid.Row="0" Grid.ColumnSpan="3" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" Source="{Binding OperationsGridSource}" ShowColumnHeaders="True" />
                                <Button Grid.Row="1" Grid.Column="0" Content="Load" Command="{Binding LoadOperationsCommand}" ToolTip.Tip="Load phrases from selected operations" Margin="5,0,0,0"></Button>
                                <Button Grid.Row="1" Grid.Column="1" Content="Load orphans" Command="{Binding LoadOrphansCommand}" ToolTip.Tip="Load all phrases not connected to any operation"></Button>
                                <Button Grid.Row="1" Grid.Column="2" Content="Delete Selected" Command="{Binding DeleteSelectedOperationsCommand}" Foreground="Red" ToolTip.Tip="Delete all selected operations and their related phrases" Margin="5" HorizontalAlignment="Right"></Button>
                            </Grid>
                        </Border>
                    </Grid>
                </Expander>
                <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding ResultsGridCountLabel}" FontWeight="Bold" FontSize="14" Margin="5,5,0,8"></TextBlock>
                <Border Grid.Row="2" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" BorderThickness="1" CornerRadius="3" Margin="5,0,5,5">
                    <Grid RowDefinitions="60*,35" ColumnDefinitions="50*,50*" IsEnabled="{Binding !IsBusy}">
                        <TreeDataGrid Name="SearchGrid" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Source="{Binding ResultsGridSource}" ShowColumnHeaders="True" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" />
                        <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal">
                            <Button Content="Clear" ToolTip.Tip="Clear all grid contents" Command="{Binding ClearAllResultsCommand}" Margin="5,0,0,0"></Button>
                            <Button Content="Copy" Command="{Binding CopyCommand}" ToolTip.Tip="Copy selected phrases to the clipboard" Margin="5,0,0,0"></Button>
                            <Button Content="Copy in CSV" Command="{Binding CopyCSVCommand}" ToolTip.Tip="Copy selected phrases and their values to the clipboard" Margin="5,0,0,0"></Button>
                            <Button Content="Export Grid" Command="{Binding ExportGridCommand}" ToolTip.Tip="Export all phrases and their values to a CSV file at the app's executable location" Margin="5,0,0,0"></Button>
                        </StackPanel>
                        <Button Grid.Row="1" Grid.Column="1" Content="Delete Selected" Command="{Binding DeleteSelectedPhrasesCommand}" ToolTip.Tip="Delete selected phrases from the database" Margin="0,0,5,0" HorizontalAlignment="Right" Foreground="Red"></Button>
                    </Grid>
                </Border>
                <Panel Grid.Column="0" Grid.Row="2" IsVisible="{Binding IsBusy}" ZIndex="9999" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <ProgressBar Background="{DynamicResource ResourceKey=ArithmosProgressBackground}" IsIndeterminate="True" ShowProgressText="True" ProgressTextFormat="{Binding BusyMessage}" Width="300" MinHeight="25"></ProgressBar>
                </Panel>
            </Grid>
        </TabItem>
        <TabItem Header="Ciphers" FontWeight="Bold" Margin="2,5,0,5" FontSize="16" Padding="0">
            <Grid Margin="0,0,0,10" RowDefinitions="25,165,20,35,*,35">
                <Grid.DataContext>
                    <vm:CipherViewModel />
                </Grid.DataContext>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"></ColumnDefinition>
                    <ColumnDefinition Width="*" MinWidth="530"></ColumnDefinition>
                    <ColumnDefinition Width="30"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="1" Text="Available Ciphers" HorizontalAlignment="Center" FontSize="14" Margin="0,5"></TextBlock>
                <Border Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" BorderThickness="1" CornerRadius="3">
                    <Grid RowDefinitions="60*,36">
                        <ListBox Grid.Row="0" IsEnabled="{Binding !IsEditMode}" ItemsSource="{Binding GematriaMethodsViewModels}" SelectedItem="{Binding SelectedGematriaMethod}" SelectionMode="Single" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" BorderThickness="0,0,0,1">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" FontSize="12" Margin="3" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <Grid Grid.Row="1" IsEnabled="{Binding !IsEditMode}" ColumnDefinitions="45,45,45,45,60">
                            <Button Grid.Column="0" Content="Add" Command="{Binding AddCipherCommand}" ToolTip.Tip="Add a new cipher" HorizontalAlignment="Left" Margin="3,0"></Button>
                            <Button Grid.Column="1" Content="Edit" Command="{Binding EditCipherCommand}" ToolTip.Tip="Edit the selected cipher" HorizontalAlignment="Left"></Button>
                            <Button Grid.Column="2" Content="^" Command="{Binding MoveUpCipherCommand}" ToolTip.Tip="Move the selected cipher up" HorizontalAlignment="Right" Margin="3,0" FontWeight="Bold" FontSize="24" Width="30" Height="24" Padding="8,2,0,0"></Button>
                            <LayoutTransformControl Grid.Column="3" HorizontalAlignment="Left">
                                <LayoutTransformControl.LayoutTransform>
                                    <RotateTransform Angle="180" />
                                </LayoutTransformControl.LayoutTransform>
                                <Button Content="^" Command="{Binding MoveDownCipherCommand}" ToolTip.Tip="Move the selected cipher down" FontWeight="Bold" FontSize="24" Width="30" Height="24" Margin="0,-23,0,0" Padding="8,0,0,0"></Button>
                            </LayoutTransformControl>
                            <Button Grid.Column="4" Content="Delete" Command="{Binding DeleteCipherCommand}" ToolTip.Tip="Delete the selected cipher" HorizontalAlignment="Right" Margin="3,0" Foreground="Red"></Button>
                        </Grid>
                    </Grid>
                </Border>
                <TextBox Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="2" IsEnabled="{Binding IsEditMode}" Text="{Binding SelectedGematriaMethodName}" Height="20" Margin="0,5,0,0" TextAlignment="Center" VerticalContentAlignment="Center" FontSize="14" Watermark="Type a cipher name..."></TextBox>
                <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="3">
                    <CheckBox IsEnabled="{Binding IsEditMode}" IsChecked="{Binding SelectedGematriaMethodAddsCharacters}" FontSize="12" Margin="0,0,10,0" ToolTip.Tip="Adds to the value of a phrase the total number of characters it contains.">Add total number of characters</CheckBox>
                    <CheckBox IsEnabled="{Binding IsEditMode}" IsChecked="{Binding SelectedGematriaMethodAddsWords}" FontSize="12" ToolTip.Tip="Adds to the value of a phrase the total number of words it contains.">Add total number of words</CheckBox>
                </StackPanel>
                <Border Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="4" IsEnabled="{Binding IsEditMode}" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" BorderThickness="1" CornerRadius="3,3,0,0">
                    <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto">
                        <ItemsControl x:Name="CipherValuesItemsControl" HorizontalAlignment="Stretch" ItemsSource="{Binding GematriaCipher}" Padding="5">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" Margin="5">
                                        <TextBox Text="{Binding Character}" FontSize="12" TextAlignment="Center" VerticalContentAlignment="Center" MaxLength="1"></TextBox>
                                        <TextBlock Text="=" Margin="2,0" VerticalAlignment="Center"></TextBlock>
                                        <NumericUpDown Value="{Binding Value, FallbackValue = 0}" Maximum="999999" Minimum="0" FontSize="12" FormatString="0" Width="70" ShowButtonSpinner="False" TextAlignment="Center" VerticalContentAlignment="Center"></NumericUpDown>
                                        <Button Content="X" Command="{Binding ElementName=CipherValuesItemsControl, Path=DataContext.RemoveCipherPairCommand}" CommandParameter="{Binding}" ToolTip.Tip="Delete pair" Foreground="Red" IsTabStop="False"></Button>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Border>
                <Border Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="5" VerticalAlignment="Stretch" IsEnabled="{Binding IsEditMode}" BorderBrush="{DynamicResource ResourceKey=ArithmosBorderBrush}" BorderThickness="1,0,1,1" CornerRadius="0,0,3,3" Padding="0,3">
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Clear" Command="{Binding ClearCipherPairsCommand}" ToolTip.Tip="Remove all pairs" Margin="5,0,5,0"></Button>
                        <ComboBox ToolTip.Tip="Select a pre-made template to save time" Width="180" Height="22" Margin="0,2,5,0" ItemsSource="{Binding CipherGroups}" SelectedValue="{Binding SelectedCipherGroup}" FontSize="12"></ComboBox>
                        <Button Content="Add from template" Command="{Binding AddGroupCommand}" ToolTip.Tip="Add the pairs from the selected template" Margin="0,0,5,0"></Button>
                        <Button Content="Add pair" Command="{Binding AddPairCommand}" ToolTip.Tip="Add a new empty pair" Margin="0,0,5,0"></Button>
                        <Button Content="Cancel" Command="{Binding CancelEditCommand}" ToolTip.Tip="Cancel and discard any changes" Margin="0,0,5,0"></Button>
                        <Button Content="Save" Command="{Binding SaveCommand}" ToolTip.Tip="Save changes to the database"></Button>
                    </StackPanel>
                </Border>
            </Grid>
        </TabItem>
        <TabItem Header="Settings" FontWeight="Bold" Margin="2,5,0,5" FontSize="16" Padding="0">
            <Grid IsEnabled="{Binding !IsBusy}" RowDefinitions="40,40,40,40,40,*">
                <Grid.DataContext>
                    <vm:SettingViewModel />
                </Grid.DataContext>
                <ToggleSwitch Grid.Column="0" Grid.Row="0" IsChecked="{Binding IsDarkMode}" OnContent="Dark Mode" OffContent="Dark Mode" FlowDirection="LeftToRight" Margin="20,0,0,0"></ToggleSwitch>
                <ToggleSwitch Grid.Column="0" Grid.Row="1" IsChecked="{Binding ShowColumnAlphabet}" OnContent="Show Alphabet Column" OffContent="Show Alphabet Column" FlowDirection="LeftToRight" Margin="20,0,0,0"></ToggleSwitch>
                <ToggleSwitch Grid.Column="0" Grid.Row="2" IsChecked="{Binding ShowColumnOperationId}" OnContent="Show Operation Column" OffContent="Show Operation Column" FlowDirection="LeftToRight" Margin="20,0,0,0"></ToggleSwitch>
                <Button Grid.Column="0" Grid.Row="3" Command="{Binding RecalculatePhrasesCommand}" Content="Recalculate phrases in database" ToolTip.Tip="If you added or edited any ciphers after you saved phrases in the database, then the corresponding values of those phrases need to be updated." Margin="20,5"></Button>
                <Button Grid.Column="0" Grid.Row="4" Command="{Binding OptimizeDatabaseCommand}" Content="Optimize database" ToolTip.Tip="Performs various optimizations on the database" Margin="20,5"></Button>
                <Panel Grid.Column="0" Grid.Row="5" IsVisible="{Binding IsBusy}" ZIndex="9999" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <ProgressBar Background="{DynamicResource ResourceKey=ArithmosProgressBackground}" IsIndeterminate="True" ShowProgressText="True" ProgressTextFormat="{Binding BusyMessage}" Width="300" Height="25"></ProgressBar>
                </Panel>
            </Grid>
        </TabItem>
        <TabItem Header="About" FontWeight="Bold" Margin="2,5,0,5" FontSize="16" Padding="0">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" MaxWidth="800" Margin="5">
                    <StackPanel.DataContext>
                        <vm:AboutViewModel />
                    </StackPanel.DataContext>
                    <Image Source="/Assets/alpha.ico" Width="50"></Image>
                    <TextBlock TextAlignment="Center" FontSize="16" FontWeight="Bold" Padding="0,20,0,0">Arithmos - Gematria Calculator and Scanner				</TextBlock>
                    <TextBlock TextAlignment="Center" FontSize="14" FontWeight="Bold" Padding="0,20,0,0" Text="{Binding AppVersion}"></TextBlock>
                    <TextBlock TextAlignment="Center" FontSize="14" Padding="0,20,0,0">Copyright (c) 2018 - 2024 Daniel Lascelles. Licensed under the MIT License.</TextBlock>
                    <TextBlock TextAlignment="Center" FontSize="14" FontWeight="Bold" Padding="0,20,0,0">MIT License</TextBlock>
                    <TextBlock TextAlignment="Left" FontSize="12" Padding="0,5,0,0" FontStyle="Italic" Text="Copyright (c) 2018 - 2024 Daniel Lascelles"></TextBlock>
                    <TextBlock TextAlignment="Left" FontSize="12" Padding="0,5,0,0" TextWrapping="Wrap" LineHeight="17">Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</TextBlock>
                    <TextBlock TextAlignment="Left" FontSize="12" Padding="0,5,0,0" TextWrapping="Wrap" LineHeight="17">The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</TextBlock>
                    <TextBlock TextAlignment="Left" FontSize="12" Padding="0,5,0,0" TextWrapping="Wrap" LineHeight="17">THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</TextBlock>
                    <TextBlock TextAlignment="Center" FontSize="14" Padding="0,20,0,0">Project URL</TextBlock>
                    <SelectableTextBlock TextAlignment="Center" FontSize="14" Padding="0,5,0,0">https://github.com/dlascelles/Arithmos/</SelectableTextBlock>
                </StackPanel>
            </ScrollViewer>
        </TabItem>
    </TabControl>
</UserControl>